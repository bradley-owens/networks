{"version":3,"file":"static/js/697.21008965.chunk.js","mappings":"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","sources":["Components/Account/FollowingAmount.js","webpack://networks/./src/Components/UI/MemberCard/MemberCard.module.css?3089","Components/UI/MemberCard/MemberCard.js","webpack://networks/./src/Pages/MyNetwork/MyNetwork.module.css?e673","Pages/MyNetwork/MyNetwork.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport AuthContext from \"../../Store/login-context\";\n\nconst FollowingAmount = () => {\n  const ctx = useContext(AuthContext);\n\n  const loggedInUser = useSelector(\n    (state) => state.authentication.loggedInUser\n  );\n\n  const connections = ctx.checkUser.find((user) => {\n    return user.id.id === loggedInUser.id.id;\n  }).connections;\n\n  if (connections === undefined) {\n    return 0;\n  }\n\n  const followingNumber = Object.entries(connections.following).length;\n\n  return followingNumber;\n};\n\nexport default FollowingAmount;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MemberCard_container__yGQ9f\",\"info\":\"MemberCard_info__cD8Iq\",\"buttons\":\"MemberCard_buttons__q8uXV\",\"button\":\"MemberCard_button__fpt8f\",\"unfollow\":\"MemberCard_unfollow__wxfl7\"};","import React, { useContext, useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { connectActions } from \"../../../Store/connect-slice\";\nimport AuthContext from \"../../../Store/login-context\";\nimport CheckFollowing from \"../../Account/CheckFollowing\";\nimport styles from \"./MemberCard.module.css\";\n\nconst MemberCard = (props) => {\n  const ctx = useContext(AuthContext);\n  const dispatch = useDispatch();\n\n  const loggedInUser = useSelector(\n    (state) => state.authentication.loggedInUser\n  );\n\n  const followHandler = () => {\n    const clickedUser = ctx.checkUser.find((user) => {\n      if (user.id.id === props.id) return user;\n    });\n    dispatch(connectActions.follow({ clickedUser, loggedInUser }));\n    ctx.fetchData();\n  };\n\n  const unfollowHandler = () => {\n    const clickedUser = ctx.checkUser.find((user) => {\n      if (user.id.id === props.id) return user;\n    });\n    dispatch(connectActions.unfollow({ clickedUser, loggedInUser }));\n    ctx.fetchData();\n  };\n\n  const [followingState, setFollowingState] = useState();\n\n  const connections = ctx.checkUser.find((user) => {\n    return user.id.id === loggedInUser.id.id;\n  }).connections;\n\n  const checkFollowing = () => {\n    if (connections === undefined) {\n      setFollowingState(false);\n    } else {\n      Object.entries(connections.following).map((connection) => {\n        let userEmail = connection[1].email;\n        if (userEmail === props.email) {\n          setFollowingState(true);\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    checkFollowing();\n  }, [connections]);\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.info}>\n        <h2>{props.name}</h2>\n        <h3>{props.email}</h3>\n        <h4> Code: {props.language}</h4>\n      </div>\n      <div className={styles.buttons}>\n        <Link to={`/${props.id}`} className={styles.button}>\n          View\n        </Link>\n        {!followingState && (\n          <button className={styles.button} onClick={followHandler}>\n            Follow\n          </button>\n        )}\n        {followingState && (\n          <button className={styles.unfollow} onClick={unfollowHandler}>\n            Unfollow\n          </button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default MemberCard;\n","// extracted by mini-css-extract-plugin\nexport default {\"network-grid\":\"MyNetwork_network-grid__YgL-8\"};","import { Fragment, useContext } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport CheckFollowing from \"../../Components/Account/FollowingAmount\";\nimport MemberCard from \"../../Components/UI/MemberCard/MemberCard\";\nimport AuthContext from \"../../Store/login-context\";\nimport styles from \"./MyNetwork.module.css\";\n\nconst MyNetwork = () => {\n  const ctx = useContext(AuthContext);\n\n  const loggedInUser = useSelector(\n    (state) => state.authentication.loggedInUser\n  );\n\n  const userInfo = ctx.checkUser.find((user) => {\n    return user.id.id === loggedInUser.id.id;\n  });\n\n  const userConnections = ctx.checkUser.find((user) => {\n    return user.id.id === loggedInUser.id.id;\n  }).connections;\n\n  // CheckFollowing();\n\n  return (\n    <Fragment>\n      {userConnections === undefined && <h1>You have no connections!</h1>}\n      {userConnections && (\n        <div>\n          <h1>Your Connections</h1>\n          <div className={styles[\"network-grid\"]}>\n            {Object.entries(userConnections.following).map((connection) => {\n              return (\n                <Fragment>\n                  <MemberCard\n                    key={Math.random()}\n                    id={userInfo.id.id}\n                    name={connection[1].name}\n                    email={connection[1].email}\n                    language={userInfo.info.language}\n                  />\n                </Fragment>\n              );\n            })}\n          </div>\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default MyNetwork;\n"],"names":["ctx","useContext","AuthContext","loggedInUser","useSelector","state","authentication","connections","checkUser","find","user","id","undefined","Object","entries","following","length","props","dispatch","useDispatch","useState","followingState","setFollowingState","useEffect","map","connection","email","className","styles","name","language","to","onClick","clickedUser","connectActions","fetchData","userInfo","userConnections","Fragment","MemberCard","info","Math","random"],"sourceRoot":""}